{"version":3,"file":"static/js/577.b08d8017.chunk.js","mappings":"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","sources":["webpack://portfolio/./src/styles/SectionHeader.module.scss?620b","components/SectionHeader.tsx","webpack://portfolio/./src/styles/AboutSection.module.scss?c9a6","webpack://portfolio/./src/styles/SeigaihaPattern.module.scss?4385","components/SeigaihaPattern.tsx","components/section/AboutSection.tsx","utils/useIntersectionObserver.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"SectionHeader_main__SMiN4\",\"title\":\"SectionHeader_title__bu9pF\"};","import React from 'react';\nimport styles from '../styles/SectionHeader.module.scss';\nimport Slide from './Animations/Slide';\nimport { SpringRef } from 'react-spring';\n\ninterface SectionHeaderProps {\n  title: {\n    firstRow: string;\n    secondRow: string;\n  };\n  number: number;\n  animationRef?: SpringRef;\n  visible: boolean;\n  headerRef?: React.Ref<HTMLHeadingElement>;\n  numRef?: React.Ref<HTMLHeadingElement>;\n}\n\nexport default function SectionHeader({\n  title,\n  number,\n  animationRef,\n  visible,\n  headerRef,\n  numRef\n}: SectionHeaderProps) {\n  return (\n    <header className={styles.main}>\n      <Slide\n        start={{ transform: 'translateX(-100vw)' }}\n        end={{\n          transform: visible ? 'translate(0)' : 'translateX(-100vw)'\n        }}\n        animationRef={animationRef}\n      >\n        <div className={styles.title}>\n          <h4>{title.firstRow}</h4>\n          <h3 ref={headerRef}>{title.secondRow.toUpperCase()}</h3>\n        </div>\n      </Slide>\n      <Slide\n        start={{ transform: 'translateX(50vw)' }}\n        end={{\n          transform: visible ? 'translate(0)' : 'translateX(50vw)'\n        }}\n        animationRef={animationRef}\n        config={{\n          mass: 60,\n          tension: 1000,\n          friction: 200,\n          bounce: 0.3\n        }}\n      >\n        <h2 ref={numRef}>{`0${number}`}</h2>\n      </Slide>\n    </header>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"AboutSection_main__w1fJM\",\"content\":\"AboutSection_content__qQsq8\",\"text_block\":\"AboutSection_text_block__fLqVu\",\"pattern\":\"AboutSection_pattern__YHEep\",\"top\":\"AboutSection_top__7EdHK\",\"bottom\":\"AboutSection_bottom__avKS5\"};","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"SeigaihaPattern_main__ymwmh\"};","import React from 'react';\nimport styles from '../styles/SeigaihaPattern.module.scss';\n\ninterface Props {\n  style?: { [key: string]: string };\n  className?: string;\n}\n\nexport default function SeigaihaPattern({ style, className }: Props) {\n  return (\n    <div\n      className={[styles.main, className].join(' ')}\n      style={style}\n    ></div>\n  );\n}\n","import React, { useContext, useEffect, useMemo, useRef } from 'react';\nimport styles from '../../styles/AboutSection.module.scss';\nimport { SectionProps } from '../../types/interfaces';\nimport SectionHeader from '../SectionHeader';\nimport useIntersectionObserver from '../../utils/useIntersectionObserver';\n\nimport Slide from '../Animations/Slide';\nimport { useChain, useSpringRef } from 'react-spring';\nimport SeigaihaPattern from '../SeigaihaPattern';\nimport WindowSizeContext from '../../utils/WindowSizeContext';\n\nexport default function AboutSection({\n  title,\n  sectionNumber\n}: SectionProps) {\n  const { lessThan992px } = useContext(WindowSizeContext);\n  const triggerRef = useRef<HTMLElement>(null);\n  const headerRef = useRef<HTMLHeadingElement>(null);\n  const numRef = useRef<HTMLHeadingElement>(null);\n\n  const ioData = useIntersectionObserver(triggerRef, {\n    freezeOnceVisible: true,\n    threshold: 0.1\n  });\n\n  const visible = ioData?.isIntersecting || false;\n\n  const headerAnimeRef = useSpringRef();\n  const textAnimeRef = useSpringRef();\n  const patternAnimeRef = useSpringRef();\n\n  useChain(\n    visible ? [headerAnimeRef, textAnimeRef, patternAnimeRef] : [],\n    [0, 0.5, 0.5]\n  );\n\n  const textBlockWidth = useMemo(() => {\n    if (!headerRef.current) return 0;\n    else return headerRef.current.offsetWidth;\n  }, [headerRef.current]);\n  const patternWidth = useMemo(() => {\n    if (!numRef.current) return 0;\n    else return numRef.current.offsetWidth;\n  }, [numRef.current]);\n\n  return (\n    <section\n      className={styles.main + ' ' + 'main_section'}\n      ref={triggerRef}\n    >\n      <SectionHeader\n        title={title}\n        number={sectionNumber}\n        animationRef={headerAnimeRef}\n        headerRef={headerRef}\n        numRef={numRef}\n        visible={visible}\n      />\n      <div className={styles.content}>\n        <Slide\n          start={{\n            transform: 'translateY(-5vh)',\n            opacity: '0'\n          }}\n          end={{\n            transform: 'translate(0)',\n            opacity: '1'\n          }}\n          className={styles.text_block}\n          animationRef={textAnimeRef}\n        >\n          <div\n            style={{\n              width: !lessThan992px ? `${textBlockWidth}px` : '100%'\n            }}\n          >\n            <p>\n              I create <strong>responsive web applications</strong> that\n              are fun to use.\n            </p>\n            <p>\n              I never saw myself programming. Somewhere along the way I\n              must&apos;ve gotten lost - led wayward by the witchcraft\n              Javascript. It whispered to me, told me stories of what was\n              possible, showed me visions of what I could build.\n            </p>\n            <p>\n              And now I can&apos;t seem to stop. I love the little puzzle\n              games you have to solve as you compose elegant code, the many\n              creative solutions that exist for any given problem,\n            </p>\n            <p>\n              making <i>something</i> out of nothing.\n            </p>\n          </div>\n        </Slide>\n        {!lessThan992px ? (\n          <Slide\n            start={{ transform: 'translateX(5vw)', opacity: '0' }}\n            end={{\n              transform: 'translate(0)',\n              opacity: '1'\n            }}\n            animationRef={patternAnimeRef}\n          >\n            <SeigaihaPattern\n              style={{\n                width: `${patternWidth}px`\n              }}\n              className={[styles.pattern, styles.top].join(' ')}\n            />\n          </Slide>\n        ) : undefined}\n      </div>\n      <Slide\n        start={{ transform: 'translateX(-5vw)', opacity: '0' }}\n        end={{\n          transform: 'translate(0)',\n          opacity: '1'\n        }}\n        animationRef={patternAnimeRef}\n      >\n        <SeigaihaPattern\n          style={{ height: `${patternWidth}px` }}\n          className={[styles.pattern, styles.bottom].join(' ')}\n        />\n      </Slide>\n    </section>\n  );\n}\n","import React, { useState, useEffect } from 'react';\n\nexport default function useIntersectionObserver(\n  elementRef: React.RefObject<HTMLElement>,\n  {\n    threshold = 0,\n    root = null,\n    rootMargin = '0%',\n    freezeOnceVisible = false\n  }\n) {\n  const [entry, setEntry] = useState<IntersectionObserverEntry | null>(\n    null\n  );\n\n  const frozen = entry?.isIntersecting && freezeOnceVisible;\n\n  useEffect(() => {\n    const node = elementRef.current;\n    const ioSupport = !!window.IntersectionObserver;\n\n    if (!ioSupport || frozen || !node) return;\n\n    const observerParams = { threshold, root, rootMargin };\n    const observer = new IntersectionObserver(([entry]) => {\n      setEntry(entry);\n    }, observerParams);\n\n    observer.observe(node);\n\n    return () => observer.disconnect();\n  }, [elementRef, threshold, root, rootMargin, frozen]);\n\n  return entry;\n}\n"],"names":["SectionHeader","title","number","animationRef","visible","headerRef","numRef","className","styles","Slide","start","transform","end","firstRow","ref","secondRow","toUpperCase","config","mass","tension","friction","bounce","SeigaihaPattern","style","join","AboutSection","sectionNumber","lessThan992px","useContext","WindowSizeContext","triggerRef","useRef","ioData","useIntersectionObserver","freezeOnceVisible","threshold","isIntersecting","headerAnimeRef","useSpringRef","textAnimeRef","patternAnimeRef","useChain","textBlockWidth","useMemo","current","offsetWidth","patternWidth","opacity","width","undefined","height","elementRef","root","rootMargin","useState","entry","setEntry","frozen","useEffect","node","window","IntersectionObserver","observer","observe","disconnect"],"sourceRoot":""}