{"version":3,"file":"static/js/275.492cc752.chunk.js","mappings":"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","sources":["webpack://portfolio/./src/styles/ContactSection.module.scss?8a19","../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/validateParams.js","../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","assets/icons/check-line.svg","assets/icons/close-line.svg","components/section/ContactSection.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"ContactSection_main__hWK21\",\"grid\":\"ContactSection_grid__N3iWR\",\"input_wrapper\":\"ContactSection_input_wrapper__YouQE\",\"error_msg\":\"ContactSection_error_msg__bBCBg\",\"send_status\":\"ContactSection_send_status__j1WCC\",\"success\":\"ContactSection_success__CV+dM\",\"error\":\"ContactSection_error__dpch6\"};","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.6.2');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCheckLine(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    height: 24,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    d: \"M0 0h24v24H0z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCheckLine);\nexport default __webpack_public_path__ + \"static/media/check-line.3f29db899e39cb68dca831bea022f649.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCloseLine(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    height: 24,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    d: \"M0 0h24v24H0z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 10.586l4.95-4.95 1.414 1.414-4.95 4.95 4.95 4.95-1.414 1.414-4.95-4.95-4.95 4.95-1.414-1.414 4.95-4.95-4.95-4.95L7.05 5.636z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCloseLine);\nexport default __webpack_public_path__ + \"static/media/close-line.058af5b2654112a53b1b0a6d60692ace.svg\";\nexport { ForwardRef as ReactComponent };","import React, { SyntheticEvent, useState, useRef } from 'react';\nimport { useSpringRef, useChain } from 'react-spring';\nimport styles from '../../styles/ContactSection.module.scss';\nimport { SectionProps } from '../../types/interfaces';\nimport SectionHeader from '../SectionHeader';\nimport emailjs from '@emailjs/browser';\nimport useIntersectionObserver from '../../utils/useIntersectionObserver';\n\nimport checkSvg from '../../assets/icons/check-line.svg';\nimport closeSvg from '../../assets/icons/close-line.svg';\nimport Slide from '../Animations/Slide';\n\ninterface Inputs {\n  email: string;\n  message: string;\n}\n\nconst defaultInputVals = {\n  email: '',\n  message: ''\n};\n\nexport default function ContactSection({\n  title,\n  sectionNumber\n}: SectionProps) {\n  const [inputValues, setInputValues] = useState(defaultInputVals);\n\n  const [inputErrors, setInputErrors] = useState({\n    email: '',\n    message: ''\n  });\n\n  const [sendStatus, setSendStatus] = useState<'error' | 'success' | ''>(\n    ''\n  );\n\n  const [loading, setLoading] = useState(false);\n\n  const form = useRef<HTMLFormElement>(null);\n\n  const triggerRef = useRef<HTMLElement>(null);\n\n  const ioData = useIntersectionObserver(triggerRef, {\n    freezeOnceVisible: true,\n    threshold: 0.1\n  });\n\n  const visible = ioData?.isIntersecting || false;\n\n  const headerAnimeRef = useSpringRef();\n  const formAnimeRef = useSpringRef();\n\n  useChain(visible ? [headerAnimeRef, formAnimeRef] : [], [0, 0.5]);\n\n  function validate(inputId: string, inputVal: string) {\n    let valid;\n\n    switch (inputId) {\n      case 'email': {\n        const regX = /\\S+@\\S+\\.\\S+/;\n        valid = regX.test(inputVal);\n        break;\n      }\n      case 'message':\n        valid = inputVal.trim().length >= 10;\n        break;\n    }\n\n    let errorMsg = '';\n    if (!valid) {\n      errorMsg =\n        inputId === 'email'\n          ? 'Please enter a valid email address'\n          : 'The message should be at least 10 characters';\n      setInputErrors((prev) => {\n        return { ...prev, [inputId]: errorMsg };\n      });\n    } else {\n      setInputErrors((prev) => ({ ...prev, [inputId]: '' }));\n    }\n\n    return errorMsg;\n  }\n\n  function handleInputChange(e: SyntheticEvent) {\n    const target = e.target as HTMLInputElement | HTMLTextAreaElement;\n    const targetId = target.id as keyof typeof inputValues;\n    setInputValues((prev) => ({ ...prev, [targetId]: target.value }));\n    if (inputErrors[targetId]) validate(target.id, target.value);\n  }\n\n  function handleInputBlur(e: SyntheticEvent) {\n    const target = e.target as HTMLInputElement | HTMLTextAreaElement;\n\n    validate(target.id, target.value);\n  }\n\n  return (\n    <section\n      className={styles.main + ' ' + 'main_section'}\n      ref={triggerRef}\n    >\n      <SectionHeader\n        title={title}\n        number={sectionNumber}\n        animationRef={headerAnimeRef}\n        visible={visible}\n      />\n      <Slide\n        start={{ transform: 'translateX(-100vw)' }}\n        end={{\n          transform: 'translate(0)'\n        }}\n        animationRef={formAnimeRef}\n      >\n        <>\n          <form\n            ref={form}\n            className={styles.form}\n            onSubmit={async (e: SyntheticEvent) => {\n              e.preventDefault();\n\n              if (loading) return;\n\n              let key: keyof typeof inputValues;\n              // eslint-disable-next-line\n              const inputErrors: { [key in keyof Inputs]: string } = {\n                email: '',\n                message: ''\n              };\n\n              for (key in inputValues) {\n                const errorMsg = validate(key, inputValues[key]);\n                inputErrors[key] = errorMsg;\n              }\n\n              if (Object.values(inputErrors).some((val) => !!val)) return;\n\n              setLoading(true);\n\n              try {\n                await emailjs.sendForm(\n                  process.env.REACT_APP_EMAILJS_SERVICEID as string,\n                  'template_ccjsl6k',\n                  form.current as HTMLFormElement,\n                  process.env.REACT_APP_EMAILJS_PUBLICKEY as string\n                );\n                setLoading(false);\n                setInputValues(defaultInputVals);\n                setSendStatus('success');\n              } catch (err) {\n                setLoading(false);\n                setSendStatus('error');\n              }\n\n              setTimeout(() => setSendStatus(''), 3000);\n            }}\n          >\n            <div className={styles.grid}>\n              <label htmlFor=\"email\">Email</label>\n              <label htmlFor=\"message\">Your message</label>\n              <div className={styles.input_wrapper}>\n                <input\n                  type=\"text\"\n                  id=\"email\"\n                  name=\"user_email\"\n                  value={inputValues.email}\n                  onChange={handleInputChange}\n                  onBlur={handleInputBlur}\n                />\n                <p className={styles.error_msg}>{inputErrors.email}</p>\n              </div>\n              <div className={styles.input_wrapper}>\n                <textarea\n                  id=\"message\"\n                  name=\"message\"\n                  value={inputValues.message}\n                  onChange={handleInputChange}\n                  onBlur={handleInputBlur}\n                />\n                <p className={styles.error_msg}>{inputErrors.message}</p>\n              </div>\n            </div>\n            <button className={loading ? 'loading' : ''}>\n              {loading ? (\n                <div className=\"lds-ellipsis\">\n                  <div></div>\n                  <div></div>\n                  <div></div>\n                  <div></div>\n                </div>\n              ) : (\n                'Send email'\n              )}\n            </button>\n          </form>\n          {sendStatus && (\n            <div className={`${styles[sendStatus]} ${styles.send_status}`}>\n              <img src={sendStatus === 'success' ? checkSvg : closeSvg} />\n              <p>\n                {sendStatus === 'success'\n                  ? \"Success. We'll be in touch.\"\n                  : 'Something went wrong. Try again.'}\n              </p>\n            </div>\n          )}\n        </>\n      </Slide>\n    </section>\n  );\n}\n"],"names":["store","_origin","validateParams","publicKey","serviceID","templateID","EmailJSResponseStatus","httpResponse","this","status","text","responseText","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","target","responseStatus","open","Object","keys","forEach","key","setRequestHeader","send","form","uID","_userID","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","defaultInputVals","email","message","ContactSection","title","sectionNumber","useState","inputValues","setInputValues","inputErrors","setInputErrors","sendStatus","setSendStatus","loading","setLoading","useRef","triggerRef","ioData","useIntersectionObserver","freezeOnceVisible","threshold","visible","isIntersecting","headerAnimeRef","useSpringRef","formAnimeRef","validate","inputId","inputVal","valid","test","trim","length","errorMsg","prev","handleInputChange","e","targetId","id","value","handleInputBlur","useChain","className","styles","ref","SectionHeader","number","animationRef","Slide","start","transform","end","onSubmit","preventDefault","values","some","val","emailjs","process","current","setTimeout","htmlFor","type","name","onChange","onBlur","src","checkSvg","closeSvg"],"sourceRoot":""}